name: Test
run-name: ${{ github.actor }} is learning GitHub Actions
on: [push]
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '14'
      - run: npm install -g bats
      - run: bats -v
      - run: sh run.sh   
      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: 22
          script: echo “Hello World”
      - name: Copy single file to remote
        uses: garygrossgarten/github-action-scp@release
        with:
          local: ./run.sh
          remote: /home/aryan/run.sh
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}   
  build:
    defaults:
      run:
        working-directory: ./backend/
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 18
        uses: actions/setup-java@v3
        with:
          java-version: '18'
          distribution: 'adopt'
      - name: Make gradlew executabkle
        run: chmod +x gradlew
      - name: execute gradlew
        run: ./gradlew test
  sonarqube:
    defaults:
      run:
        working-directory: ./backend/
    name: sonarqube 
    runs-on: ubuntu-latest
    steps:
    - name: Checking out
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Set up JDK 18
      uses: actions/setup-java@v3
      with:
        java-version: '18'
        distribution: 'adopt'
    - name: Make gradlew executable
      run: chmod +x gradlew
    - name: Build and analyze
      env:
         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
         SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      run: ./gradlew build sonarqube --info
  build-and-push-docker-image:
    defaults:
      run:
        working-directory: ./backend/
    runs-on: ubuntu-latest
    steps:
     - uses: actions/checkout@v3
     - name: Build the Docker Image
       run: docker build . --file Dockerfile --tag orion30starbackend
     - name: Login to Docker Hub
       run: docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
     - name: Push the Docker image
       run: docker push orion30star/backend
